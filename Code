
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
import sklearn
from string import punctuation

data = pd.read_csv("/Users/lizdeschaine/Documents/DATS6102/loan.csv", usecols=("purpose", "title","id"))

#makes the values string
data['title'] = data['title'].astype(str)

#creates a list of all titles under purpose = other
other_index = data[data['purpose'] == "other"].index.tolist()

bad_list =['if','the',"on","and","for","my", "to", "a", "off", "pay", "loan", "other", "payoff"]


key_list = []
word_list=[]
for i in other_index:
    local_list=[]
    local_list = data['title'][i].split()
    for word in local_list:
        word = word.lower()   
        for p in list(punctuation):
            word=word.replace(p,'')
        if word not in bad_list:
            word_list.append(word)
            key_list.append(data['id'][i])

words_df = pd.DataFrame()
words_df['id'] = key_list
words_df['word'] = word_list

#merge data 
full_data = pd.read_csv("/Users/lizdeschaine/Documents/DATS6102/loan.csv")
#only use the first 30 columns
full_data = full_data.ix[:,:30]
#merge
merge_df = pd.merge(full_data, words_df, on='id')


def loan_stat_num(x):
    if x == "Charged Off":
        return 0
    if x == "Current":
        return 1
    if x == "Default":
        return 0
    if x == "Does not meet the credit policy. Status:Charged Off":
        return 0
    if x == "Does not meet the credit policy. Status:Fully Paid":
        return 1
    if x == "Fully Paid":
        return 1
    if x == "In Grace Period":
        return 1
    if x == "Issued":
        return 1
    if x == "Late (16-30 days)":
        return 0
    if x == "Late (31-120 days)":
        return 0
merge_df["loan_stat_num"] = merge_df["loan_status"].apply(loan_stat_num)

               
def grade_num(x):
    if x == "A":
        return 5
    if x == "B":
        return 4
    if x == "C":
        return 3
    if x == "D":
        return 2
    if x == "E":
        return 1
merge_df["grade_num"] = merge_df["grade"].apply(grade_num)

  
merge_df.word.value_counts().head(8)
merge_df.to_csv('merge.csv')

vc_words = ["personal","debt","consolidation","credit","home","car","bills","wedding"]

#for creating plotly graph in plotly
import plotly
import plotly.plotly as py
import plotly.graph_objs as go
plotly.tools.set_credentials_file(username='ERych', api_key='7fwe7xtrqt')
 

x = []
for item in vc_words:
    x.append(merge_df.loc[merge_df['word'] == item, "loan_stat_num"].mean())
    
y = []
for item in vc_words:
    y.append(merge_df.loc[merge_df['word'] == item, "grade_num"].mean())

size = []
for item in vc_words:
    num = merge_df.loc[merge_df['word'] == item, "loan_amnt"].mean()
    num1 = num/100
    size.append(num1)

name = []
for item in vc_words:
    name.append(item)

trace0 = go.Scatter(
    x=x,
    y=y,
    text=['Personal', 'Debt', 'Consolidation', 'Credit', 'Home;','Car','Bills','Wedding'],
    mode='markers',
    marker=dict(
        color=['rgb(93, 164, 214)', 'rgb(255, 144, 14)',  'rgb(44, 160, 101)', 'rgb(255, 65, 54)'],
        size=size,
    )
)

data = [trace0]
py.plot(data, filename='bubblechart-text')



